# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  pylint:
    name: Pylint validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.x"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel pylint
        pip install --upgrade -r requirements.txt
    - name: Analysing the code with pylint
      run: |
        pylint --rcfile .pylintrc $(git ls-files '*.py')

  test:
    name: QA Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade -r requirements.txt

      - name: Test with unittest
        env:
          webhook_url: ${{ secrets.DISCORD_UNITTESTS_WEBHOOK }}
        run: python -m unittest
        working-directory: "src/"

  build-n-publish:
    name: Build package and publish to PyPI
    needs: [pylint, test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade -r requirements.txt

      - name: Checking configurations
        run: python setup.py check

      - name: Update sdist
        run: python setup.py sdist

      - name: Build package
        run: python -m build

      - name: Checking distribution files
        run: twine check dist/*

      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true
